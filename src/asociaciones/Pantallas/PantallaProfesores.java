/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package asociaciones.Pantallas;

import Asociaciones.Entidades.Curso;
import Asociaciones.Entidades.Profesor;
import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.MouseInfo;
import java.awt.Point;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author HanselChavez
 */
public class PantallaProfesores extends javax.swing.JFrame {
    
    private static Curso curso ;
    int x,y;
    public PantallaProfesores(Curso curso) {
        setUndecorated(true);
        initComponents();
        this.curso=curso;
        this.setLocationRelativeTo(null);
        mostrarLista();
        placeholder();
        lblProfeCurso.setText(lblProfeCurso.getText()+curso.getNombre());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        lblProfeCurso = new javax.swing.JLabel();
        txtBusquedaProfesor = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        listProfesores = new javax.swing.JList<>();
        btnVolver = new javax.swing.JButton();
        btnAgregarProfe = new javax.swing.JButton();
        btnEliminarProfe = new javax.swing.JButton();
        btnllenar = new javax.swing.JButton();
        btnClose = new javax.swing.JLabel();
        btnMinimize = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panel.setBackground(new java.awt.Color(86, 75, 163));
        panel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                panelMouseDragged(evt);
            }
        });
        panel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                panelMousePressed(evt);
            }
        });

        lblProfeCurso.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        lblProfeCurso.setForeground(new java.awt.Color(255, 255, 255));
        lblProfeCurso.setText("Profesores de :");

        txtBusquedaProfesor.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        btnBuscar.setBackground(new java.awt.Color(0, 153, 51));
        btnBuscar.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        btnBuscar.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/search.png"))); // NOI18N
        btnBuscar.setText("  Buscar");
        btnBuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        listProfesores.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        listProfesores.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", " " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(listProfesores);

        btnVolver.setBackground(new java.awt.Color(51, 51, 255));
        btnVolver.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        btnVolver.setForeground(new java.awt.Color(255, 255, 255));
        btnVolver.setText("Volver");
        btnVolver.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverActionPerformed(evt);
            }
        });

        btnAgregarProfe.setBackground(new java.awt.Color(0, 51, 204));
        btnAgregarProfe.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        btnAgregarProfe.setForeground(new java.awt.Color(255, 255, 255));
        btnAgregarProfe.setText("Agregar");
        btnAgregarProfe.setBorderPainted(false);
        btnAgregarProfe.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAgregarProfe.setInheritsPopupMenu(true);
        btnAgregarProfe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarProfeActionPerformed(evt);
            }
        });

        btnEliminarProfe.setBackground(new java.awt.Color(204, 0, 0));
        btnEliminarProfe.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        btnEliminarProfe.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminarProfe.setText("Eliminar");
        btnEliminarProfe.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEliminarProfe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarProfeActionPerformed(evt);
            }
        });

        btnllenar.setBackground(new java.awt.Color(51, 51, 255));
        btnllenar.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        btnllenar.setForeground(new java.awt.Color(255, 255, 255));
        btnllenar.setText("Llenar Lista");
        btnllenar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnllenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnllenarActionPerformed(evt);
            }
        });

        btnClose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/close.png"))); // NOI18N
        btnClose.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCloseMouseClicked(evt);
            }
        });

        btnMinimize.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/minimize.png"))); // NOI18N
        btnMinimize.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMinimize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnMinimizeMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 564, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(panelLayout.createSequentialGroup()
                                    .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnllenar)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnAgregarProfe, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btnEliminarProfe, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(panelLayout.createSequentialGroup()
                                .addComponent(lblProfeCurso)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 353, Short.MAX_VALUE)
                                .addComponent(btnMinimize)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnClose))))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(txtBusquedaProfesor, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(btnBuscar)))
                .addContainerGap())
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(lblProfeCurso))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnMinimize)
                            .addComponent(btnClose))))
                .addGap(18, 18, 18)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtBusquedaProfesor, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregarProfe, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminarProfe, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVolver, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnllenar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 
    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
          validarBusqueda();
    }//GEN-LAST:event_btnBuscarActionPerformed
    private void btnVolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverActionPerformed
        volverMethod();
    }//GEN-LAST:event_btnVolverActionPerformed
   
    private void btnAgregarProfeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarProfeActionPerformed
        PantallaAgregarProfesor panAgregarProfe = 
        new PantallaAgregarProfesor(curso);
        panAgregarProfe.setVisible(true);        
        this.dispose(); 
    }//GEN-LAST:event_btnAgregarProfeActionPerformed
    private void btnEliminarProfeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarProfeActionPerformed
        int k = listProfesores.getSelectedIndex();
        if(k!=-1){         
            String  j = listProfesores.getSelectedValue().trim();  
            recorrerArrayProfesores(j); 
        }
        else{
            JOptionPane.showMessageDialog(null,"Debe seleccionar un Profesor"
            + " de la lista","Eliminar Profesor",
            JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnEliminarProfeActionPerformed
    private void btnllenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnllenarActionPerformed
        mostrarLista();
    }//GEN-LAST:event_btnllenarActionPerformed
    private void btnCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCloseMouseClicked
        volverMethod();
    }//GEN-LAST:event_btnCloseMouseClicked
    private void btnMinimizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMinimizeMouseClicked
        this.setState(PantallaGestorCursos.ICONIFIED);
    }//GEN-LAST:event_btnMinimizeMouseClicked
    private void panelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelMouseDragged
        Point point = MouseInfo.getPointerInfo().getLocation();
        setLocation(point.x-x,point.y-y);
    }//GEN-LAST:event_panelMouseDragged
    private void panelMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelMousePressed
        x=evt.getX();
        y=evt.getY();
    }//GEN-LAST:event_panelMousePressed
    private void volverMethod() {
        this.dispose();
        PantallaGestorCursos pantGestorCurso = new
                PantallaGestorCursos(PantallaGestorCursos.getListaCursos());
        pantGestorCurso.setVisible(true);
    }
    private void validarBusqueda() throws HeadlessException {                
        if(!"Ingrese nombre del Profesor".equals(txtBusquedaProfesor.getText())){
            if(curso.getProfesores()[0]==null && curso.getProfesores()[1]==null){
                JOptionPane.showMessageDialog(null, "Lista de Profesores Vacia",
                "Buscar Profesor", JOptionPane.INFORMATION_MESSAGE);
            }
            else{
            recorrerlistaBuscar();
            }
        }
        else{
            JOptionPane.showMessageDialog(null,"Ingresa el nombre del Profesor",
            "Buscar Profesor", JOptionPane.INFORMATION_MESSAGE);
        }
       
        
    }
    private void placeholder(){
        this.txtBusquedaProfesor.setForeground(Color.GRAY);
        this.txtBusquedaProfesor.setText("Ingrese nombre del Profesor");
        this.txtBusquedaProfesor.addFocusListener(new FocusListener() {
            @Override
            public void focusGained(FocusEvent e) {
                if (txtBusquedaProfesor.getText()
                    .equals("Ingrese nombre del Profesor")) {
                    txtBusquedaProfesor.setText("");
                    txtBusquedaProfesor.setForeground(Color.BLACK);
                }
            }
            @Override
            public void focusLost(FocusEvent e) {
                if (txtBusquedaProfesor.getText().isEmpty()) {
                    txtBusquedaProfesor.setForeground(Color.GRAY);
                    txtBusquedaProfesor.setText("Ingrese nombre del Profesor");
                }
            }
        });
    }
    private void recorrerlistaBuscar() throws HeadlessException {
        String nombre = txtBusquedaProfesor.getText();
        boolean encontrado = false;
        for (int i = 0; i < 2; i++) {           
            if (curso.getProfesores()[i]!=null && 
                    curso.getProfesores()[i].getNombre().equals(nombre)) {
                DefaultListModel model =new DefaultListModel();
                listProfesores.setModel(model);
                model.removeAllElements();
                model.addElement(curso.getProfesores()[i].toString());  
                encontrado=true;
            }       
        }
        if(encontrado==false){
            JOptionPane.showMessageDialog(null, "Profesor no encontrado",
                    "Buscar Profesor", JOptionPane.INFORMATION_MESSAGE);
            mostrarLista();
        }
    }
    private void recorrerArrayProfesores(String j) throws HeadlessException {
        for (int i = 0; i < 2; i++) {
            if(curso.getProfesores()[i]!=null){
                if(curso.getProfesores()[i].toString().equals(j)){
                    int respuesta = JOptionPane.showConfirmDialog(null,
                            "Profesor Seleccionado: \n"+curso.getProfesores()[i].getNombre()
                                    +"\nEstas seguro de Eliminar?",
                            "Eliminar Profesor", JOptionPane.YES_NO_OPTION);
                    estadoEliminado(respuesta, i);
                }
            }
        }
    }
    private void estadoEliminado(int respuesta, int i) throws HeadlessException {
        if (respuesta == JOptionPane.YES_OPTION) {
            curso.getProfesores()[i] = null;
            mostrarLista();
            JOptionPane.showMessageDialog(null,"Profesor Eliminado"
                    ,"Eliminar Profesor",JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null,"Profesor no Eliminado"
                    ,"Eliminar Profesor",JOptionPane.INFORMATION_MESSAGE);
        }
    }
    private void mostrarLista(){
        DefaultListModel model =new DefaultListModel();        
        listProfesores.setModel(model); 
        model.removeAllElements();
        for (int i = 0; i < 2; i++) {
            if(curso.getProfesores()[i] != null)
            {
                model.addElement(curso.getProfesores()[i].toString());
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarProfe;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JLabel btnClose;
    private javax.swing.JButton btnEliminarProfe;
    private javax.swing.JLabel btnMinimize;
    private javax.swing.JButton btnVolver;
    private javax.swing.JButton btnllenar;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblProfeCurso;
    private javax.swing.JList<String> listProfesores;
    private javax.swing.JPanel panel;
    private javax.swing.JTextField txtBusquedaProfesor;
    // End of variables declaration//GEN-END:variables

}
